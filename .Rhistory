season_df = data.frame(c(1:12),c("Winter","Winter","Spring","Spring","Spring","Summer","Summer","Summer","Fall","Fall","Fall","Winter"))
names(season_df)[1] <- "month"
names(season_df)[2] <- "season"
for (i in 1:length(us_data$date))
{
if (month(us_data$date[i]) >= 3 & month(us_data$date[i]) < 6) {
us_data$season[i] = season[1]
} else if (month(us_data$date[i]) >= 6 & month(us_data$date[i]) < 9) {
us_data$season[i] = season[2]
} else if (month(us_data$date[i]) >= 9 & month(us_data$date[i]) < 12) {
us_data$season[i] = season[3]
} else {
us_data$season[i] = season[4]
}
}
us_data$season = as.factor(us_data$season)
## Plotting Below
# Timeseries of Covid Cases and Deaths through time
# Value used to transform the data
p1 <- ggplot(us_data, aes(x = date, y = new_cases)) +
geom_line(color = "darkred") +
labs(title="US Covid-19 Cases and Deaths",  y="Daily New Cases", x="")+
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(us_data, aes(x = date, y = new_deaths)) +
geom_line(color = "black") +
labs(  y="Daily New Deaths", x="Date")
grid.arrange(p1,p2,nrow=2)
# Chunk 3
plot(cars)
# Chunk 1
## REQUIRED PACKAGES
# install.packages("gridExtra")
# install.packages("mapproj")
# install.packages("choroplethr")
# importing libraries
## REQUIRED LIBRARIES
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
library(gridExtra)
library(lmtest)
library(forecast)
library(dtwclust)
library(ggpubr)
library(gplots)
library(RColorBrewer)
library(nnet)
library(summarytools)
library(lmtest)
# Chunk 2
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
state_pop <-read.csv("state_pop.csv")
# 3 -
us_data <-read.csv("us.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date,format="%Y-%m-%d")
us_data$date <- as.Date(us_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
us_data <- base::subset(us_data,date>"2020-02-29")
# Examination of US-wide Temporal Trends
# Use `filter()` to add a column named `new_cases` and 'new_deaths'
us_data$new_cases = as.numeric(stats::filter(us_data$cases,filter=c(1,-1), sides=1))
us_data$new_deaths = as.numeric(stats::filter(us_data$deaths,filter=c(1,-1), sides=1))
# Change first entry fo new deaths and new cases from NA to 0
us_data$new_cases[1]<-0
us_data$new_deaths[1]<-0
# Add Data on Season
season <- c("Spring","Summer","Winter","Fall")
# create df for seasons
season_df = data.frame(c(1:12),c("Winter","Winter","Spring","Spring","Spring","Summer","Summer","Summer","Fall","Fall","Fall","Winter"))
names(season_df)[1] <- "month"
names(season_df)[2] <- "season"
for (i in 1:length(us_data$date))
{
if (month(us_data$date[i]) >= 3 & month(us_data$date[i]) < 6) {
us_data$season[i] = season[1]
} else if (month(us_data$date[i]) >= 6 & month(us_data$date[i]) < 9) {
us_data$season[i] = season[2]
} else if (month(us_data$date[i]) >= 9 & month(us_data$date[i]) < 12) {
us_data$season[i] = season[3]
} else {
us_data$season[i] = season[4]
}
}
us_data$season = as.factor(us_data$season)
## Plotting Below
# Timeseries of Covid Cases and Deaths through time
# Value used to transform the data
p1 <- ggplot(us_data, aes(x = date, y = new_cases)) +
geom_line(color = "darkred") +
labs(title="US Covid-19 Cases and Deaths",  y="Daily New Cases", x="")+
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(us_data, aes(x = date, y = new_deaths)) +
geom_line(color = "black") +
labs(  y="Daily New Deaths", x="Date")
grid.arrange(p1,p2,nrow=2)
# Chunk 3
plot(cars)
# Chunk 1
## REQUIRED PACKAGES
# install.packages("gridExtra")
# install.packages("mapproj")
# install.packages("choroplethr")
# importing libraries
## REQUIRED LIBRARIES
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
library(gridExtra)
library(lmtest)
library(forecast)
library(dtwclust)
library(ggpubr)
library(gplots)
library(RColorBrewer)
library(nnet)
library(summarytools)
library(lmtest)
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
state_pop <-read.csv("state_pop.csv")
# 3 -
us_data <-read.csv("us.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date,format="%Y-%m-%d")
us_data$date <- as.Date(us_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
us_data <- base::subset(us_data,date>"2020-02-29")
# Examination of US-wide Temporal Trends
# Use `filter()` to add a column named `new_cases` and 'new_deaths'
us_data$new_cases = as.numeric(stats::filter(us_data$cases,filter=c(1,-1), sides=1))
us_data$new_deaths = as.numeric(stats::filter(us_data$deaths,filter=c(1,-1), sides=1))
# Change first entry fo new deaths and new cases from NA to 0
us_data$new_cases[1]<-0
us_data$new_deaths[1]<-0
# Add Data on Season
season <- c("Spring","Summer","Winter","Fall")
# create df for seasons
season_df = data.frame(c(1:12),c("Winter","Winter","Spring","Spring","Spring","Summer","Summer","Summer","Fall","Fall","Fall","Winter"))
names(season_df)[1] <- "month"
names(season_df)[2] <- "season"
for (i in 1:length(us_data$date))
{
if (month(us_data$date[i]) >= 3 & month(us_data$date[i]) < 6) {
us_data$season[i] = season[1]
} else if (month(us_data$date[i]) >= 6 & month(us_data$date[i]) < 9) {
us_data$season[i] = season[2]
} else if (month(us_data$date[i]) >= 9 & month(us_data$date[i]) < 12) {
us_data$season[i] = season[3]
} else {
us_data$season[i] = season[4]
}
}
us_data$season = as.factor(us_data$season)
## Plotting Below
# Timeseries of Covid Cases and Deaths through time
# Value used to transform the data
p1 <- ggplot(us_data, aes(x = date, y = new_cases)) +
geom_line(color = "darkred") +
labs(title="US Covid-19 Cases and Deaths",  y="Daily New Cases", x="")+
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(us_data, aes(x = date, y = new_deaths)) +
geom_line(color = "black") +
labs(  y="Daily New Deaths", x="Date")
grid.arrange(p1,p2,nrow=2)
# Chunk 1
## REQUIRED PACKAGES
# install.packages("gridExtra")
# install.packages("mapproj")
# install.packages("choroplethr")
# importing libraries
## REQUIRED LIBRARIES
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
library(gridExtra)
library(lmtest)
library(forecast)
library(dtwclust)
library(ggpubr)
library(gplots)
library(RColorBrewer)
library(nnet)
library(summarytools)
library(lmtest)
# Chunk 2
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
state_pop <-read.csv("state_pop.csv")
# 3 -
us_data <-read.csv("us.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date,format="%Y-%m-%d")
us_data$date <- as.Date(us_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
us_data <- base::subset(us_data,date>"2020-02-29")
# Examination of US-wide Temporal Trends
# Use `filter()` to add a column named `new_cases` and 'new_deaths'
us_data$new_cases = as.numeric(stats::filter(us_data$cases,filter=c(1,-1), sides=1))
us_data$new_deaths = as.numeric(stats::filter(us_data$deaths,filter=c(1,-1), sides=1))
# Change first entry fo new deaths and new cases from NA to 0
us_data$new_cases[1]<-0
us_data$new_deaths[1]<-0
# Add Data on Season
season <- c("Spring","Summer","Winter","Fall")
# create df for seasons
season_df = data.frame(c(1:12),c("Winter","Winter","Spring","Spring","Spring","Summer","Summer","Summer","Fall","Fall","Fall","Winter"))
names(season_df)[1] <- "month"
names(season_df)[2] <- "season"
for (i in 1:length(us_data$date))
{
if (month(us_data$date[i]) >= 3 & month(us_data$date[i]) < 6) {
us_data$season[i] = season[1]
} else if (month(us_data$date[i]) >= 6 & month(us_data$date[i]) < 9) {
us_data$season[i] = season[2]
} else if (month(us_data$date[i]) >= 9 & month(us_data$date[i]) < 12) {
us_data$season[i] = season[3]
} else {
us_data$season[i] = season[4]
}
}
us_data$season = as.factor(us_data$season)
# Chunk 3
## Plotting Below
# Timeseries of Covid Cases and Deaths through time
# Value used to transform the data
p1 <- ggplot(us_data, aes(x = date, y = new_cases)) +
geom_line(color = "darkred") +
labs(title="US Covid-19 Cases and Deaths",  y="Daily New Cases", x="")+
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(us_data, aes(x = date, y = new_deaths)) +
geom_line(color = "black") +
labs(  y="Daily New Deaths", x="Date")
grid.arrange(p1,p2,nrow=2)
# Chunk 4
plot(cars)
# Chunk 1
## REQUIRED PACKAGES
# install.packages("gridExtra")
# install.packages("mapproj")
# install.packages("choroplethr")
# importing libraries
## REQUIRED LIBRARIES
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
library(gridExtra)
library(lmtest)
library(forecast)
library(dtwclust)
library(ggpubr)
library(gplots)
library(RColorBrewer)
library(nnet)
library(summarytools)
library(lmtest)
# Chunk 2
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
state_pop <-read.csv("state_pop.csv")
# 3 -
us_data <-read.csv("us.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date,format="%Y-%m-%d")
us_data$date <- as.Date(us_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
us_data <- base::subset(us_data,date>"2020-02-29")
# Examination of US-wide Temporal Trends
# Use `filter()` to add a column named `new_cases` and 'new_deaths'
us_data$new_cases = as.numeric(stats::filter(us_data$cases,filter=c(1,-1), sides=1))
us_data$new_deaths = as.numeric(stats::filter(us_data$deaths,filter=c(1,-1), sides=1))
# Change first entry fo new deaths and new cases from NA to 0
us_data$new_cases[1]<-0
us_data$new_deaths[1]<-0
# Add Data on Season
season <- c("Spring","Summer","Winter","Fall")
# create df for seasons
season_df = data.frame(c(1:12),c("Winter","Winter","Spring","Spring","Spring","Summer","Summer","Summer","Fall","Fall","Fall","Winter"))
names(season_df)[1] <- "month"
names(season_df)[2] <- "season"
for (i in 1:length(us_data$date))
{
if (month(us_data$date[i]) >= 3 & month(us_data$date[i]) < 6) {
us_data$season[i] = season[1]
} else if (month(us_data$date[i]) >= 6 & month(us_data$date[i]) < 9) {
us_data$season[i] = season[2]
} else if (month(us_data$date[i]) >= 9 & month(us_data$date[i]) < 12) {
us_data$season[i] = season[3]
} else {
us_data$season[i] = season[4]
}
}
us_data$season = as.factor(us_data$season)
# Chunk 3
## Plotting Below
# Timeseries of Covid Cases and Deaths through time
# Value used to transform the data
p1 <- ggplot(us_data, aes(x = date, y = new_cases)) +
geom_line(color = "darkred") +
labs(title="US Covid-19 Cases and Deaths",  y="Daily New Cases", x="")+
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(us_data, aes(x = date, y = new_deaths)) +
geom_line(color = "black") +
labs(  y="Daily New Deaths", x="Date")
grid.arrange(p1,p2,nrow=2)
# Chunk 4
plot(cars)
# Chunk 1
## REQUIRED PACKAGES
# install.packages("gridExtra")
# install.packages("mapproj")
# install.packages("choroplethr")
# importing libraries
## REQUIRED LIBRARIES
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
library(gridExtra)
library(lmtest)
library(forecast)
library(dtwclust)
library(ggpubr)
library(gplots)
library(RColorBrewer)
library(nnet)
library(summarytools)
library(lmtest)
# Chunk 2
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
state_pop <-read.csv("state_pop.csv")
# 3 -
us_data <-read.csv("us.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date,format="%Y-%m-%d")
us_data$date <- as.Date(us_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
us_data <- base::subset(us_data,date>"2020-02-29")
# Examination of US-wide Temporal Trends
# Use `filter()` to add a column named `new_cases` and 'new_deaths'
us_data$new_cases = as.numeric(stats::filter(us_data$cases,filter=c(1,-1), sides=1))
us_data$new_deaths = as.numeric(stats::filter(us_data$deaths,filter=c(1,-1), sides=1))
# Change first entry fo new deaths and new cases from NA to 0
us_data$new_cases[1]<-0
us_data$new_deaths[1]<-0
# Add Data on Season
season <- c("Spring","Summer","Winter","Fall")
# create df for seasons
season_df = data.frame(c(1:12),c("Winter","Winter","Spring","Spring","Spring","Summer","Summer","Summer","Fall","Fall","Fall","Winter"))
names(season_df)[1] <- "month"
names(season_df)[2] <- "season"
for (i in 1:length(us_data$date))
{
if (month(us_data$date[i]) >= 3 & month(us_data$date[i]) < 6) {
us_data$season[i] = season[1]
} else if (month(us_data$date[i]) >= 6 & month(us_data$date[i]) < 9) {
us_data$season[i] = season[2]
} else if (month(us_data$date[i]) >= 9 & month(us_data$date[i]) < 12) {
us_data$season[i] = season[3]
} else {
us_data$season[i] = season[4]
}
}
us_data$season = as.factor(us_data$season)
# Chunk 3
## Plotting Below
# Timeseries of Covid Cases and Deaths through time
# Value used to transform the data
p1 <- ggplot(us_data, aes(x = date, y = new_cases)) +
geom_line(color = "darkred") +
labs(title="US Covid-19 Cases and Deaths",  y="Daily New Cases", x="")+
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(us_data, aes(x = date, y = new_deaths)) +
geom_line(color = "black") +
labs(  y="Daily New Deaths", x="Date")
grid.arrange(p1,p2,nrow=2)
# Chunk 4
plot(cars)
knitr::opts_chunk$set(echo = FALSE)
## REQUIRED PACKAGES
# install.packages("gridExtra")
# install.packages("mapproj")
# install.packages("choroplethr")
# importing libraries
## REQUIRED LIBRARIES
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
library(gridExtra)
library(lmtest)
library(forecast)
library(dtwclust)
library(ggpubr)
library(gplots)
library(RColorBrewer)
library(nnet)
library(summarytools)
library(lmtest)
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
state_pop <-read.csv("state_pop.csv")
# 3 -
us_data <-read.csv("us.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date,format="%Y-%m-%d")
us_data$date <- as.Date(us_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
us_data <- base::subset(us_data,date>"2020-02-29")
# Examination of US-wide Temporal Trends
# Use `filter()` to add a column named `new_cases` and 'new_deaths'
us_data$new_cases = as.numeric(stats::filter(us_data$cases,filter=c(1,-1), sides=1))
us_data$new_deaths = as.numeric(stats::filter(us_data$deaths,filter=c(1,-1), sides=1))
# Change first entry fo new deaths and new cases from NA to 0
us_data$new_cases[1]<-0
us_data$new_deaths[1]<-0
# Add Data on Season
season <- c("Spring","Summer","Winter","Fall")
# create df for seasons
season_df = data.frame(c(1:12),c("Winter","Winter","Spring","Spring","Spring","Summer","Summer","Summer","Fall","Fall","Fall","Winter"))
names(season_df)[1] <- "month"
names(season_df)[2] <- "season"
for (i in 1:length(us_data$date))
{
if (month(us_data$date[i]) >= 3 & month(us_data$date[i]) < 6) {
us_data$season[i] = season[1]
} else if (month(us_data$date[i]) >= 6 & month(us_data$date[i]) < 9) {
us_data$season[i] = season[2]
} else if (month(us_data$date[i]) >= 9 & month(us_data$date[i]) < 12) {
us_data$season[i] = season[3]
} else {
us_data$season[i] = season[4]
}
}
us_data$season = as.factor(us_data$season)
## Plotting Below
# Timeseries of Covid Cases and Deaths through time
# Value used to transform the data
p1 <- ggplot(us_data, aes(x = date, y = new_cases)) +
geom_line(color = "darkred") +
labs(title="US Covid-19 Cases and Deaths",  y="Daily New Cases", x="")+
theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(us_data, aes(x = date, y = new_deaths)) +
geom_line(color = "black") +
labs(  y="Daily New Deaths", x="Date")
grid.arrange(p1,p2,nrow=2)
# Region Map
all_states <- map_data("state")
all_states$region <- str_to_title(all_states$region)
stateData <- merge(all_states,states_info,by.x="region",by.y = "Name" )
regionplot <- ggplot()+geom_polygon(data=stateData,aes(x=long, y=lat, group = group, fill=Region),color="grey50")+coord_map()
regionplot
# Region Map
all_states <- map_data("state")
all_states$region <- str_to_title(all_states$region)
stateData <- merge(all_states,states_info,by.x="region",by.y = "Name" )
regionplot <- ggplot()+geom_polygon(data=stateData,aes(x=long, y=lat, group = group, fill=Region),color="grey50")+coord_map()
regionplot
