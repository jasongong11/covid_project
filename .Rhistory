month <- data.frame(format(state_data2$date,format="%m/%Y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate monthly sum for each state
state_mnthly = as.data.table(state_data3)[, sum(new_cases), by = .(month,state)]
names(state_mnthly)[3] <- "cum_cases"
# Boxplot of Monthly Cummulative Cases by State
dum = unique(state_mnthly$month)
state_mnthly$month <- factor(state_mnthly$month , levels=dum)
mnthly_bplot = ggplot(state_mnthly,aes(month, cum_cases)) + geom_boxplot() +
scale_x_date(date_labels = "%b-%y")
mnthly_bplot + labs(y = "Total Monthly Cases by State",
title = "Box Plot of Monthly Covid-19 Cases by State")
# importing libraries
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
# Find unique fips values to find unique counties
fips_vect <- unique(cty_data$fips)
# Find unique dates
dates_vect <- unique(cty_data$date)
# find unique states (Exclude territories)
states_vect <-state.name;
# Find number of daily new cases and deaths by state
i <-1
# looping through unique state names
for (val in states_vect)
{
# subset by state
dum <- subset(state_data, state == val)
#Use `filter()` to add a column named `new_cases`
dum$new_cases = as.numeric(stats::filter(dum$cases,filter=c(1,-1), sides=1))
# Set Na values to 0. These occur on the first date of obervations
dum$new_cases[is.na(dum$new_cases)] <- 0
#Use `filter()` to add a column named `new_deaths`
dum$new_deaths = as.numeric(stats::filter(dum$deaths,filter=c(1,-1), sides=1))
# Set NaN values to 0. These occur on the first date of obervations
dum$new_deaths[is.na(dum$new_deaths)] <- 0
# append to dataframe
if (i>1){
df1 <- rbind(df1,dum)
}else{
df1 <- dum
}
i <- i+1
}
# final new data frame
state_data2 <- df1
# extracting year and month
month <- data.frame(format(state_data2$date,format="%m/%Y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate monthly sum for each state
state_mnthly = as.data.table(state_data3)[, sum(new_cases), by = .(month,state)]
names(state_mnthly)[3] <- "cum_cases"
# Boxplot of Monthly Cummulative Cases by State
dum = unique(state_mnthly$month)
state_mnthly$month <- factor(state_mnthly$month , levels=dum)
mnthly_bplot = ggplot(state_mnthly,aes(month, cum_cases)) + geom_boxplot()
mnthly_bplot + labs(y = "Total Monthly Cases by State",
title = "Box Plot of Monthly Covid-19 Cases by State")
options
par(mfrow=c(4,5))
for (val in states_vect)
{
# subset by state
dum <- subset(state_data2, state == val)
plot(dum$date,dum$new_cases,"l",  xlab="Date", ylab="Dly Cases")
title(val)
}
View(month)
month <- data.frame(format(state_data2$date,format="%m/%YY"))
View(month)
month <- data.frame(format(state_data2$date,format="%m/%y"))
View(month)
# importing libraries
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
# Find unique fips values to find unique counties
fips_vect <- unique(cty_data$fips)
# Find unique dates
dates_vect <- unique(cty_data$date)
# find unique states (Exclude territories)
states_vect <-state.name;
# Find number of daily new cases and deaths by state
i <-1
# looping through unique state names
for (val in states_vect)
{
# subset by state
dum <- subset(state_data, state == val)
#Use `filter()` to add a column named `new_cases`
dum$new_cases = as.numeric(stats::filter(dum$cases,filter=c(1,-1), sides=1))
# Set Na values to 0. These occur on the first date of obervations
dum$new_cases[is.na(dum$new_cases)] <- 0
#Use `filter()` to add a column named `new_deaths`
dum$new_deaths = as.numeric(stats::filter(dum$deaths,filter=c(1,-1), sides=1))
# Set NaN values to 0. These occur on the first date of obervations
dum$new_deaths[is.na(dum$new_deaths)] <- 0
# append to dataframe
if (i>1){
df1 <- rbind(df1,dum)
}else{
df1 <- dum
}
i <- i+1
}
# final new data frame
state_data2 <- df1
# extracting year and month
month <- data.frame(format(state_data2$date,format="%m/%y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate monthly sum for each state
state_mnthly = as.data.table(state_data3)[, sum(new_cases), by = .(month,state)]
names(state_mnthly)[3] <- "cum_cases"
# Boxplot of Monthly Cummulative Cases by State
dum = unique(state_mnthly$month)
state_mnthly$month <- factor(state_mnthly$month , levels=dum)
mnthly_bplot = ggplot(state_mnthly,aes(month, cum_cases)) + geom_boxplot()
mnthly_bplot + labs(y = "Total Monthly Cases by State",
title = "Box Plot of Monthly Covid-19 Cases by State")
options
par(mfrow=c(4,5))
for (val in states_vect)
{
# subset by state
dum <- subset(state_data2, state == val)
plot(dum$date,dum$new_cases,"l",  xlab="Date", ylab="Dly Cases")
title(val)
}
# Find number of daily new cases and deaths by state
i <-1
# looping through unique state names
for (val in states_vect)
{
# subset by state
dum <- subset(state_data, state == val)
#Use `filter()` to add a column named `new_cases`
dum$new_cases = as.numeric(stats::filter(dum$cases,filter=c(1,-1), sides=1))
# Set Na values to 0. These occur on the first date of obervations
dum$new_cases[is.na(dum$new_cases)] <- 0
#Use `filter()` to add a column named `new_deaths`
dum$new_deaths = as.numeric(stats::filter(dum$deaths,filter=c(1,-1), sides=1))
# Set NaN values to 0. These occur on the first date of obervations
dum$new_deaths[is.na(dum$new_deaths)] <- 0
# append to dataframe
if (i>1){
df1 <- rbind(df1,dum)
}else{
df1 <- dum
}
i <- i+1
}
# final new data frame
state_data2 <- df1
# extracting year and month
month <- data.frame(format(state_data2$date,format="%m/%y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate monthly sum for each state
state_mnthly = as.data.table(state_data3)[, meean(new_cases), by = .(month,state)]
# importing libraries
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(scales)
# read in NYtimes Covid data tables
# Cumulative Daily Cases and Deaths by
# 1 - County Level
cty_data <-read.csv("us-counties.csv")
# 2 - State Level
state_data <-read.csv("us-states.csv")
# transforming date column from CHARACTER to DATE class
cty_data$date <- as.Date(cty_data$date)
state_data$date <- as.Date(state_data$date)
# filter out dates before March 1st, 2020
cty_data <- base::subset(cty_data,date>"2020-02-29")
state_data <- base::subset(state_data,date>"2020-02-29")
# Find unique fips values to find unique counties
fips_vect <- unique(cty_data$fips)
# Find unique dates
dates_vect <- unique(cty_data$date)
# find unique states (Exclude territories)
states_vect <-state.name;
# Find number of daily new cases and deaths by state
i <-1
# looping through unique state names
for (val in states_vect)
{
# subset by state
dum <- subset(state_data, state == val)
#Use `filter()` to add a column named `new_cases`
dum$new_cases = as.numeric(stats::filter(dum$cases,filter=c(1,-1), sides=1))
# Set Na values to 0. These occur on the first date of obervations
dum$new_cases[is.na(dum$new_cases)] <- 0
#Use `filter()` to add a column named `new_deaths`
dum$new_deaths = as.numeric(stats::filter(dum$deaths,filter=c(1,-1), sides=1))
# Set NaN values to 0. These occur on the first date of obervations
dum$new_deaths[is.na(dum$new_deaths)] <- 0
# append to dataframe
if (i>1){
df1 <- rbind(df1,dum)
}else{
df1 <- dum
}
i <- i+1
}
# final new data frame
state_data2 <- df1
# extracting year and month
month <- data.frame(format(state_data2$date,format="%m/%y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate monthly sum for each state
state_mnthly = as.data.table(state_data3)[, mean(new_cases), by = .(month,state)]
names(state_mnthly)[3] <- "avg_cases"
# Boxplot of Monthly Cummulative Cases by State
dum = unique(state_mnthly$month)
state_mnthly$month <- factor(state_mnthly$month , levels=dum)
mnthly_bplot = ggplot(state_mnthly,aes(month, cum_cases)) + geom_boxplot()
mnthly_bplot + labs(y = "Mean Daily Cases by State",
title = "Box Plot of Monthly Covid-19 Cases by State")
View(state_mnthly)
# Find number of daily new cases and deaths by state
i <-1
# looping through unique state names
for (val in states_vect)
{
# subset by state
dum <- subset(state_data, state == val)
#Use `filter()` to add a column named `new_cases`
dum$new_cases = as.numeric(stats::filter(dum$cases,filter=c(1,-1), sides=1))
# Set Na values to 0. These occur on the first date of obervations
dum$new_cases[is.na(dum$new_cases)] <- 0
#Use `filter()` to add a column named `new_deaths`
dum$new_deaths = as.numeric(stats::filter(dum$deaths,filter=c(1,-1), sides=1))
# Set NaN values to 0. These occur on the first date of obervations
dum$new_deaths[is.na(dum$new_deaths)] <- 0
# append to dataframe
if (i>1){
df1 <- rbind(df1,dum)
}else{
df1 <- dum
}
i <- i+1
}
# final new data frame
state_data2 <- df1
# extracting year and month
month <- data.frame(format(state_data2$date,format="%m/%y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate monthly sum for each state
state_mnthly = as.data.table(state_data3)[, mean(new_cases), by = .(month,state)]
names(state_mnthly)[3] <- "avg_cases"
# Boxplot of Monthly Cummulative Cases by State
dum = unique(state_mnthly$month)
state_mnthly$month <- factor(state_mnthly$month , levels=dum)
mnthly_bplot = ggplot(state_mnthly,aes(month, avg_cases)) + geom_boxplot()
mnthly_bplot + labs(y = "Mean Daily Cases by State",
title = "Box Plot of Monthly Covid-19 Cases by State")
# Find number of daily new cases and deaths by state
i <-1
# looping through unique state names
for (val in states_vect)
{
# subset by state
dum <- subset(state_data, state == val)
#Use `filter()` to add a column named `new_cases`
dum$new_cases = as.numeric(stats::filter(dum$cases,filter=c(1,-1), sides=1))
# Set Na values to 0. These occur on the first date of obervations
dum$new_cases[is.na(dum$new_cases)] <- 0
#Use `filter()` to add a column named `new_deaths`
dum$new_deaths = as.numeric(stats::filter(dum$deaths,filter=c(1,-1), sides=1))
# Set NaN values to 0. These occur on the first date of obervations
dum$new_deaths[is.na(dum$new_deaths)] <- 0
# append to dataframe
if (i>1){
df1 <- rbind(df1,dum)
}else{
df1 <- dum
}
i <- i+1
}
# final new data frame
state_data2 <- df1
# extracting year and month
month <- data.frame(format(state_data2$date,format="%m/%y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate avg cases for each state
state_mnthly_cases = as.data.table(state_data3)[, mean(new_cases), by = .(month,state)]
names(state_mnthly_cases)[3] <- "avg_cases"
# Calculate avg deaths for each state
state_mnthly_deaths = as.data.table(state_data3)[, mean(new_deaths), by = .(month,state)]
names(state_mnthly_deaths)[3] <- "avg_dethas"
# Boxplot of Monthly Cummulative Cases by State
# getting dates in order
dum = unique(state_mnthly_cases$month)
state_mnthly_cases$month <- factor(state_mnthly_cases$month , levels=dum)
state_mnthly_deaths$month <- factor(state_mnthly_deaths$month , levels=dum)
# plotting below
mnthly_case_bplot = ggplot(state_mnthly_deaths,aes(month, avg_cases)) + geom_boxplot()
mnthly_case_bplot + labs(y = "Mean Daily Cases by State",
title = "Box Plot of Monthly Covid-19 Cases by State")
# Find number of daily new cases and deaths by state
i <-1
# looping through unique state names
for (val in states_vect)
{
# subset by state
dum <- subset(state_data, state == val)
#Use `filter()` to add a column named `new_cases`
dum$new_cases = as.numeric(stats::filter(dum$cases,filter=c(1,-1), sides=1))
# Set Na values to 0. These occur on the first date of obervations
dum$new_cases[is.na(dum$new_cases)] <- 0
#Use `filter()` to add a column named `new_deaths`
dum$new_deaths = as.numeric(stats::filter(dum$deaths,filter=c(1,-1), sides=1))
# Set NaN values to 0. These occur on the first date of obervations
dum$new_deaths[is.na(dum$new_deaths)] <- 0
# append to dataframe
if (i>1){
df1 <- rbind(df1,dum)
}else{
df1 <- dum
}
i <- i+1
}
# final new data frame
state_data2 <- df1
# extracting year and month
month <- data.frame(format(state_data2$date,format="%m/%y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate avg cases for each state
state_mnthly_cases = as.data.table(state_data3)[, mean(new_cases), by = .(month,state)]
names(state_mnthly_cases)[3] <- "avg_cases"
# Calculate avg deaths for each state
state_mnthly_deaths = as.data.table(state_data3)[, mean(new_deaths), by = .(month,state)]
names(state_mnthly_deaths)[3] <- "avg_deaths"
# Boxplot of Monthly Cummulative Cases by State
# getting dates in order
dum = unique(state_mnthly_cases$month)
state_mnthly_cases$month <- factor(state_mnthly_cases$month , levels=dum)
state_mnthly_deaths$month <- factor(state_mnthly_deaths$month , levels=dum)
# plotting below
mnthly_case_bplot = ggplot(state_mnthly_cases,aes(month, avg_cases)) + geom_boxplot()
mnthly_case_bplot + labs(y = "Mean Daily Cases by State",
title = "Box Plot of Monthly Covid-19 Cases by State")
mnthly_death_bplot = ggplot(state_mnthly_deaths,aes(month, avg_cases)) + geom_boxplot()
mnthly_death_bplot + labs(y = "Mean Daily Deaths by State",
title = "Box Plot of Monthly Covid-19 Deaths by State")
# Find number of daily new cases and deaths by state
i <-1
# looping through unique state names
for (val in states_vect)
{
# subset by state
dum <- subset(state_data, state == val)
#Use `filter()` to add a column named `new_cases`
dum$new_cases = as.numeric(stats::filter(dum$cases,filter=c(1,-1), sides=1))
# Set Na values to 0. These occur on the first date of obervations
dum$new_cases[is.na(dum$new_cases)] <- 0
#Use `filter()` to add a column named `new_deaths`
dum$new_deaths = as.numeric(stats::filter(dum$deaths,filter=c(1,-1), sides=1))
# Set NaN values to 0. These occur on the first date of obervations
dum$new_deaths[is.na(dum$new_deaths)] <- 0
# append to dataframe
if (i>1){
df1 <- rbind(df1,dum)
}else{
df1 <- dum
}
i <- i+1
}
# final new data frame
state_data2 <- df1
# extracting year and month
month <- data.frame(format(state_data2$date,format="%m/%y"))
# month <- data.frame(format(state_data2$date,format="%m"))
# add as columns to df
# state_data2<-bind_cols(state_data2,year)
state_data2<-bind_cols(state_data2,month)
# sorting columns
state_data3 <- state_data2[,c(1,8,2,4,6,5,7)]
# renaming columns
names(state_data3)[2] <- "month"
# Calculate avg cases for each state
state_mnthly_cases = as.data.table(state_data3)[, mean(new_cases), by = .(month,state)]
names(state_mnthly_cases)[3] <- "avg_cases"
# Calculate avg deaths for each state
state_mnthly_deaths = as.data.table(state_data3)[, mean(new_deaths), by = .(month,state)]
names(state_mnthly_deaths)[3] <- "avg_deaths"
# Boxplot of Monthly Cummulative Cases by State
# getting dates in order
dum = unique(state_mnthly_cases$month)
state_mnthly_cases$month <- factor(state_mnthly_cases$month , levels=dum)
state_mnthly_deaths$month <- factor(state_mnthly_deaths$month , levels=dum)
# plotting below
mnthly_case_bplot = ggplot(state_mnthly_cases,aes(month, avg_cases)) + geom_boxplot()
mnthly_case_bplot + labs(y = "Mean Daily Cases by State",
title = "Box Plot of Monthly Covid-19 Cases by State")
mnthly_death_bplot = ggplot(state_mnthly_deaths,aes(month, avg_deaths)) + geom_boxplot()
mnthly_death_bplot + labs(y = "Mean Daily Deaths by State",
title = "Box Plot of Monthly Covid-19 Deaths by State")
state.regioin
state.region
state.x77
state_pop = state.x77.population
state_pop = = state.x77.Population
state_pop <- state.x77.Population
state_demo <-state.x77
View(state_demo)
class(state_demo)
regions <- state.region
regions
state
states_info <- data.frame("Name" = states_vect,"Region" = regions)
View(states_info)
demographics <- state.x77
View(demographics)
class(demographics)
demographics$Population
demographics.Population
demographics[Population]
View(demographics)
demographics[:,1]
demographics[,1]
states_info <- data.frame("Name" = states_vect,"Region" = regions,"Pop"=demographics[,1)
demographics = data.frame(demographics)
View(demographics)
states_info <- data.frame("Name" = states_vect,"Region" = regions,"Pop"=demographics$Population)
View(states_info)
